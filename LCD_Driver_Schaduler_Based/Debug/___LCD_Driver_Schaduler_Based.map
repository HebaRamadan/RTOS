Archive member included because of file (symbol)

e:/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              e:/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
e:/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./Lcd_prg.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

arr_State           0x32              ./Lcd_prg.o
apstrTaskArray      0x3c              ./RTO_prg.o
arr_Queue           0x32              ./Lcd_prg.o
Pfun_CMP            0x2               ./Timer0_prg.o
Pfun_OVF            0x2               ./Timer0_prg.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD e:/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./Dio_prg.o
LOAD ./Lcd_prg.o
LOAD ./RTO_prg.o
LOAD ./Timer0_prg.o
LOAD ./main.o
LOAD e:/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD e:/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD e:/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x16b0
 *(.vectors)
 .vectors       0x00000000       0x54 e:/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 e:/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc e:/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x10 e:/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000060                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000070        0x8 e:/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x00000078        0x4 e:/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000078                __vector_1
                0x00000078                __vector_12
                0x00000078                __bad_interrupt
                0x00000078                __vector_6
                0x00000078                __vector_3
                0x00000078                __vector_13
                0x00000078                __vector_17
                0x00000078                __vector_19
                0x00000078                __vector_7
                0x00000078                __vector_5
                0x00000078                __vector_4
                0x00000078                __vector_9
                0x00000078                __vector_2
                0x00000078                __vector_15
                0x00000078                __vector_8
                0x00000078                __vector_14
                0x00000078                __vector_16
                0x00000078                __vector_18
                0x00000078                __vector_20
 .text          0x0000007c        0x0 ./Dio_prg.o
 .text          0x0000007c        0x0 ./Lcd_prg.o
 .text          0x0000007c        0x0 ./RTO_prg.o
 .text          0x0000007c        0x0 ./Timer0_prg.o
 .text          0x0000007c        0x0 ./main.o
 .text          0x0000007c        0x0 e:/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x0000007c        0x0 e:/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x0000007c                . = ALIGN (0x2)
 *(.text.*)
 .text.Dio_vidSetPinDir
                0x0000007c      0x6cc ./Dio_prg.o
                0x0000007c                Dio_vidSetPinDir
 .text.Dio_vidSetPinVal
                0x00000748      0x6cc ./Dio_prg.o
                0x00000748                Dio_vidSetPinVal
 .text.Lcd_vidSendCommand
                0x00000e14       0xbe ./Lcd_prg.o
                0x00000e14                Lcd_vidSendCommand
 .text.Lcd_vidInit
                0x00000ed2      0x126 ./Lcd_prg.o
                0x00000ed2                Lcd_vidInit
 .text.Lcd_vidWriteChar
                0x00000ff8       0xbe ./Lcd_prg.o
                0x00000ff8                Lcd_vidWriteChar
 .text.Lcd_vidEnableTrigger
                0x000010b6       0x16 ./Lcd_prg.o
                0x000010b6                Lcd_vidEnableTrigger
 .text.Lcd_vidDisableTrigger
                0x000010cc       0x16 ./Lcd_prg.o
                0x000010cc                Lcd_vidDisableTrigger
 .text.Lcd_vidQueueChar
                0x000010e2       0x40 ./Lcd_prg.o
                0x000010e2                Lcd_vidQueueChar
 .text.Lcd_vidQueueCommand
                0x00001122       0x42 ./Lcd_prg.o
                0x00001122                Lcd_vidQueueCommand
 .text.Lcd_vidQueueString
                0x00001164       0x78 ./Lcd_prg.o
                0x00001164                Lcd_vidQueueString
 .text.Lcd_vidClearQueue
                0x000011dc       0x46 ./Lcd_prg.o
                0x000011dc                Lcd_vidClearQueue
 .text.Lcd_u8ReadQueue
                0x00001222       0xe0 ./Lcd_prg.o
                0x00001222                Lcd_u8ReadQueue
 .text.RTO_vidInit
                0x00001302       0x48 ./RTO_prg.o
                0x00001302                RTO_vidInit
 .text.RTO_vidCreateQueueOfTasks
                0x0000134a       0x36 ./RTO_prg.o
                0x0000134a                RTO_vidCreateQueueOfTasks
 .text.RTO_vidScheduler
                0x00001380      0x110 ./RTO_prg.o
                0x00001380                RTO_vidScheduler
 .text.TimerTick
                0x00001490       0x68 ./RTO_prg.o
                0x00001490                TimerTick
 .text.Timer0_vidInit
                0x000014f8       0x56 ./Timer0_prg.o
                0x000014f8                Timer0_vidInit
 .text.Timer0_vidStopTimer
                0x0000154e       0x18 ./Timer0_prg.o
                0x0000154e                Timer0_vidStopTimer
 .text.Timer0_vidSetCounterRegisterValue
                0x00001566       0x1c ./Timer0_prg.o
                0x00001566                Timer0_vidSetCounterRegisterValue
 .text.Timer0_vidSetCompareRegisterValue
                0x00001582       0x1c ./Timer0_prg.o
                0x00001582                Timer0_vidSetCompareRegisterValue
 .text.CMP_vidSetCB
                0x0000159e       0x24 ./Timer0_prg.o
                0x0000159e                CMP_vidSetCB
 .text.OVF_vidSetCB
                0x000015c2       0x24 ./Timer0_prg.o
                0x000015c2                OVF_vidSetCB
 .text.__vector_10
                0x000015e6       0x5a ./Timer0_prg.o
                0x000015e6                __vector_10
 .text.__vector_11
                0x00001640       0x5a ./Timer0_prg.o
                0x00001640                __vector_11
 .text.main     0x0000169a       0x12 ./main.o
                0x0000169a                main
 .text.libgcc   0x000016ac        0x0 e:/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x000016ac        0x0 e:/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x000016ac                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000016ac        0x0 e:/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x000016ac                exit
                0x000016ac                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000016ac        0x4 e:/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000016b0                _etext = .

.data           0x00800060        0x0 load address 0x000016b0
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 e:/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./Dio_prg.o
 .data          0x00800060        0x0 ./Lcd_prg.o
 .data          0x00800060        0x0 ./RTO_prg.o
 .data          0x00800060        0x0 ./Timer0_prg.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 e:/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 e:/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060       0xaa
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800060        0x0 e:/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x00800060        0x0 ./Dio_prg.o
 .bss           0x00800060        0x0 ./Lcd_prg.o
 .bss           0x00800060        0x0 ./RTO_prg.o
 .bss           0x00800060        0x0 ./Timer0_prg.o
 .bss           0x00800060        0x0 ./main.o
 .bss           0x00800060        0x0 e:/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800060        0x0 e:/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.Queue_Write_Counter
                0x00800060        0x1 ./Lcd_prg.o
                0x00800060                Queue_Write_Counter
 .bss.Queue_Read_Counter
                0x00800061        0x1 ./Lcd_prg.o
                0x00800061                Queue_Read_Counter
 .bss.Ovf_Count
                0x00800062        0x4 ./RTO_prg.o
                0x00800062                Ovf_Count
 *(COMMON)
 COMMON         0x00800066       0x64 ./Lcd_prg.o
                0x00800066                arr_State
                0x00800098                arr_Queue
 COMMON         0x008000ca       0x3c ./RTO_prg.o
                0x008000ca                apstrTaskArray
 COMMON         0x00800106        0x4 ./Timer0_prg.o
                0x00800106                Pfun_CMP
                0x00800108                Pfun_OVF
                0x0080010a                PROVIDE (__bss_end, .)
                0x000016b0                __data_load_start = LOADADDR (.data)
                0x000016b0                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080010a        0x0
                0x0080010a                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080010a                PROVIDE (__noinit_end, .)
                0x0080010a                _end = .
                0x0080010a                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x18a8
 *(.stab)
 .stab          0x00000000      0x9cc ./Dio_prg.o
 .stab          0x000009cc      0x750 ./Lcd_prg.o
                                0x7c8 (size before relaxing)
 .stab          0x0000111c      0x300 ./RTO_prg.o
                                0x378 (size before relaxing)
 .stab          0x0000141c      0x384 ./Timer0_prg.o
                                0x3fc (size before relaxing)
 .stab          0x000017a0      0x108 ./main.o
                                0x114 (size before relaxing)

.stabstr        0x00000000      0xbbf
 *(.stabstr)
 .stabstr       0x00000000      0xbbf ./Dio_prg.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(___LCD_Driver_Schaduler_Based.elf elf32-avr)
LOAD linker stubs
